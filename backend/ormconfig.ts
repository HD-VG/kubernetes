/* eslint-disable prettier/prettier */
import { DataSource } from "typeorm";
import {
  User,
  Rol,
  Permission,
  AsignationUserRol,
  AsignationRolPermission,
  ChainOfCustody,
  Sampling,
  Transport,
  ConfigurationVersion,
  Applicant,
  ConfigurationCalculation,
  ReportInstance,
  ReportTemplate,
  TestResult,
  ConfigurationStandard,
  ConfigurationParameter,
  ConfigurationLimit,
  ConfigurationTypeWater,
  ConfigurationUexp,
  ConfigurationTypeDagme,
  ConfigurationTypeMachine,
  ConfigurationTypeWork,
  ConfigurationUtil,
  ConfigurationCars,
  ConfigurationTypeMaterial,
  Water,
  Reported,
  Reporter,
  Register,
  Recurring,
  RegisterPicture,
} from './src/domain/shared/index.entity' 
import * as dotenv from "dotenv";
dotenv.config();

// Para los seeders
export const AppDataSource = new DataSource({
  type: 'postgres',
  host: process.env.DB_HOST,
  port: Number(process.env.DB_PORT),
  username: process.env.DB_USERNAME,
  password: process.env.DB_PASSWORD,
  database: process.env.DB_DATABASE,
  synchronize: process.env.DB_SYNCHRONIZE === 'true',
  logging: process.env.DB_LOGGING === 'true',
  // entities: [process.env.DB_ENTITIES as string],
  entities: [
    User,
    Rol,
    Permission,
    AsignationUserRol,
    AsignationRolPermission,
    ChainOfCustody,
    Sampling,
    Transport,
    ConfigurationVersion,
    Applicant,
    ConfigurationCalculation,
    ReportInstance,
    ReportTemplate,
    TestResult,
    ConfigurationStandard,
    ConfigurationParameter,
    ConfigurationLimit,
    ConfigurationTypeWater,
    ConfigurationUexp,
    ConfigurationTypeDagme,
    ConfigurationTypeMachine,
    ConfigurationTypeWork,
    ConfigurationUtil,
    ConfigurationCars,
    ConfigurationTypeMaterial,
    Water,
    Reported,
    Reporter,
    Register,
    Recurring,
    RegisterPicture,
  ],
  // migrations: [process.env.DB_MIGRATIONS as string],
  // subscribers: [process.env.DB_SUBSCRIBERS as string],
  migrations: [__dirname + '/src/migrations/*.ts'],
});
